﻿@using Microsoft.Extensions.Localization
@using Microsoft.Extensions.Options
@using Volo.Abp.AspNetCore.MultiTenancy
@using Volo.Abp.AspNetCore.Mvc.UI.Components.LayoutHook
@using Volo.Abp.AspNetCore.Mvc.UI.MultiTenancy.Localization
@using Volo.Abp.AspNetCore.Mvc.UI.Theme.LeptonXLite.Bundling
@using Volo.Abp.AspNetCore.Mvc.UI.Theme.LeptonXLite.Themes.LeptonXLite.Components.MainToolbar
@using Volo.Abp.AspNetCore.Mvc.UI.Theme.LeptonXLite.Themes.LeptonXLite.Components.PageAlerts
@using Volo.Abp.AspNetCore.Mvc.UI.Theming
@using Volo.Abp.AspNetCore.Mvc.UI.Widgets.Components.WidgetScripts
@using Volo.Abp.AspNetCore.Mvc.UI.Widgets.Components.WidgetStyles
@using Volo.Abp.MultiTenancy
@using Volo.Abp.Localization
@using Volo.Abp.Ui.Branding
@using Volo.Abp.Ui.LayoutHooks
@inject IBrandingProvider BrandingProvider
@inject IOptions<AbpMultiTenancyOptions> MultiTenancyOptions
@inject ICurrentTenant CurrentTenant
@inject IStringLocalizer<AbpUiMultiTenancyResource> MultiTenancyStringLocalizer
@inject ITenantResolveResultAccessor TenantResolveResultAccessor

@{
    Layout = null;
    var containerClass = ViewBag.FluidLayout == true ? "container-fluid" : "container"; //TODO: Better and type-safe options
    var rtl = CultureHelper.IsRtl ? "rtl" : string.Empty;
}

<!DOCTYPE html>
<!-- 
   Template Name: Tabula HTML Template
   Version: 1.0.0
   Author: Webstrot 
   
   -->
<!--[if IE 8]> 
<html lang="en" class="ie8 no-js">
   <![endif]-->
   <!--[if IE 9]> 
   <html lang="en" class="ie9 no-js">
      <![endif]-->
      <!--[if !IE]><!-->
    <html lang="@CultureInfo.CurrentCulture.Name" dir="@rtl">
         <!--[endif]-->
         <head>
    @await Component.InvokeLayoutHookAsync(LayoutHooks.Head.First, StandardLayouts.Account)

    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
    <meta http-equiv="X-UA-Compatible" content="ie=edge">

    <title>@(ViewBag.Title == null ? "Kidoo Learning" : ViewBag.Title)</title>

    @if (ViewBag.Description != null)
    {
        <meta name="description" content="@(ViewBag.Description as string)" />
    }
    <abp-style-bundle name="@LeptonXLiteThemeBundles.Styles.Global" />

    @await RenderSectionAsync("styles", false)

    @await Component.InvokeAsync(typeof(WidgetStylesViewComponent))

    @await Component.InvokeLayoutHookAsync(LayoutHooks.Head.Last, StandardLayouts.Account)
            <!--Template style -->
            <link rel="stylesheet" type="text/css" href="/css/animate.css" />
            <link rel="stylesheet" type="text/css" href="/css/animate.min.css" />
            @* <link rel="stylesheet" type="text/css" href="/css/bootstrap.min.css" /> *@
            <link rel="stylesheet" type="text/css" href="/css/fonts.css" />
             <link rel="stylesheet" type="text/css" href="/css/owl.carousel.min.css" />
            <link rel="stylesheet" type="text/css" href="/css/owl.theme.default.min.css" />
            <link rel="stylesheet" type="text/css" href="/css/font-awesome.css" />
            <link rel="stylesheet" type="text/css" href="/css/font-awesome.min.css" />
            <link rel="stylesheet" type="text/css" href="/css/magnific-popup.css" />
           
            <link rel="stylesheet" type="text/css" href="/css/style.css" />
            <link rel="stylesheet" type="text/css" href="/css/responsive.css" />
            <!--favicon-->
            <link rel="shortcut icon" type="image/png" href="/images/fav-icon.png" />
         </head>

<body class="page-bg @rtl">
    @* <div id="preloader">
        <div id="status">
            <img src="/images/preloader.svg" id="preloader_image" alt="loader">
        </div>
    </div> *@
    <!-- top to return -->
    <a href="javascript:;" id="return-to-top" class=""> <i class="fas fa-angle-double-up"></i></a>
    @await Component.InvokeLayoutHookAsync(LayoutHooks.Body.First, StandardLayouts.Account)

   @*  @(await Component.InvokeAsync<MainNavbarViewComponent>()) *@

    @if (MultiTenancyOptions.Value.IsEnabled &&
    (TenantResolveResultAccessor.Result?.AppliedResolvers?.Contains(CookieTenantResolveContributor.ContributorName) == true ||
    TenantResolveResultAccessor.Result?.AppliedResolvers?.Contains(QueryStringTenantResolveContributor.ContributorName) == true))
    {
        <div class="card shadow-sm rounded mb-3">
            <div class="card-body px-5">
                <div class="row">
                    <div class="col">
                        <span style="font-size: .8em;" class="text-uppercase text-muted">@MultiTenancyStringLocalizer["Tenant"]</span><br />
                        <h6 class="m-0 d-inline-block">
                            @if (CurrentTenant.Id == null)
                            {
                                <span>
                                    @MultiTenancyStringLocalizer["NotSelected"]
                                </span>
                            }
                            else
                            {
                                <strong>@(CurrentTenant.Name ?? CurrentTenant.Id.Value.ToString())</strong>
                            }
                        </h6>
                    </div>
                    <div class="col-auto">
                        <a id="AbpTenantSwitchLink" href="javascript:;" class="btn btn-sm mt-3 btn-outline-primary">@MultiTenancyStringLocalizer["Switch"]</a>
                    </div>
                </div>
            </div>
        </div>
    }
    @(await Component.InvokeAsync<PageAlertsViewComponent>())
    @await Component.InvokeLayoutHookAsync(LayoutHooks.PageContent.First, StandardLayouts.Account)
    @RenderBody()
    @await Component.InvokeLayoutHookAsync(LayoutHooks.PageContent.Last, StandardLayouts.Account)
    

    <abp-script-bundle name="@LeptonXLiteThemeBundles.Scripts.Global" />

    <script src="~/Abp/ApplicationLocalizationScript?cultureName=@CultureInfo.CurrentUICulture.Name"></script>
    <script src="~/Abp/ApplicationConfigurationScript"></script>
    <script src="~/Abp/ServiceProxyScript"></script>

    @await RenderSectionAsync("scripts", false)

    @await Component.InvokeAsync(typeof(WidgetScriptsViewComponent))

    @await Component.InvokeLayoutHookAsync(LayoutHooks.Body.Last, StandardLayouts.Account)
    <!-- footer section end -->
    <!-- Side Panel -->
    <script src="/js/bootstrap.min.js"></script>
    <script src="/js/wow.js"></script>
    <script src="/js/jquery.magnific-popup.js"></script>
    <script src="/js/owl.carousel.min.js"></script>
    <script src="/js/contact_form.js"></script>
    <script src="/js/custom.js"></script>
    <!-- custom js-->
    <!-- heart icon -->
    <script>
        $('.heart a').click(function () {
            if ($(this).hasClass('current')) {
                $(this).removeClass('current');
            } else {
                $('.top_icon span.current').removeClass('current');
                $(this).addClass('current');
            }
        });
    </script>
    <script>
        $('#search_button').on("click", function (e) {
            $('#search_open').slideToggle();
            e.stopPropagation();
        });

        $(document).on("click", function (e) {
            if (!(e.target.closest('#search_open'))) {
                $("#search_open").slideUp();
            }
        });
    </script>
    <script>
        $('#search_button1').on("click", function (e) {
            $('#search_open1').slideToggle();
            e.stopPropagation();
        });

        $(document).on("click", function (e) {
            if (!(e.target.closest('#search_open1'))) {
                $("#search_open1").slideUp();
            }
        });
    </script>
</body>
</html>